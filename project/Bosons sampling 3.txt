{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "6a0ce2ea-d97c-45de-b5d0-c912ce1e006d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: strawberryfields in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (0.23.0)\n",
      "Requirement already satisfied: numba in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from strawberryfields) (0.56.0)\n",
      "Requirement already satisfied: scipy>=1.0.0 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from strawberryfields) (1.8.1)\n",
      "Requirement already satisfied: quantum-blackbird>=0.3.0 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from strawberryfields) (0.4.0)\n",
      "Requirement already satisfied: python-dateutil>=2.8.0 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from strawberryfields) (2.8.2)\n",
      "Requirement already satisfied: toml in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from strawberryfields) (0.10.2)\n",
      "Requirement already satisfied: thewalrus>=0.18.0 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from strawberryfields) (0.19.0)\n",
      "Requirement already satisfied: sympy>=1.5 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from strawberryfields) (1.10.1)\n",
      "Requirement already satisfied: networkx>=2.0 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from strawberryfields) (2.8.4)\n",
      "Requirement already satisfied: quantum-xir>=0.1.1 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from strawberryfields) (0.2.1)\n",
      "Requirement already satisfied: xanadu-cloud-client>=0.2.1 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from strawberryfields) (0.2.1)\n",
      "Requirement already satisfied: requests>=2.22.0 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from strawberryfields) (2.28.1)\n",
      "Requirement already satisfied: urllib3>=1.25.3 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from strawberryfields) (1.26.10)\n",
      "Requirement already satisfied: numpy>=1.17.4 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from strawberryfields) (1.21.6)\n",
      "Requirement already satisfied: six>=1.5 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from python-dateutil>=2.8.0->strawberryfields) (1.16.0)\n",
      "Requirement already satisfied: antlr4-python3-runtime==4.8 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from quantum-blackbird>=0.3.0->strawberryfields) (4.8)\n",
      "Requirement already satisfied: lark-parser>=0.11.0 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from quantum-xir>=0.1.1->strawberryfields) (0.12.0)\n",
      "Requirement already satisfied: charset-normalizer<3,>=2 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from requests>=2.22.0->strawberryfields) (2.1.0)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from requests>=2.22.0->strawberryfields) (2021.5.30)\n",
      "Requirement already satisfied: idna<4,>=2.5 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from requests>=2.22.0->strawberryfields) (2.10)\n",
      "Requirement already satisfied: mpmath>=0.19 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from sympy>=1.5->strawberryfields) (1.2.1)\n",
      "Requirement already satisfied: dask[delayed] in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from thewalrus>=0.18.0->strawberryfields) (2022.8.1)\n",
      "Requirement already satisfied: setuptools in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from numba->strawberryfields) (58.1.0)\n",
      "Requirement already satisfied: llvmlite<0.40,>=0.39.0dev0 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from numba->strawberryfields) (0.39.0)\n",
      "Requirement already satisfied: fire in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from xanadu-cloud-client>=0.2.1->strawberryfields) (0.4.0)\n",
      "Requirement already satisfied: pydantic[dotenv] in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from xanadu-cloud-client>=0.2.1->strawberryfields) (1.8.2)\n",
      "Requirement already satisfied: appdirs in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from xanadu-cloud-client>=0.2.1->strawberryfields) (1.4.4)\n",
      "Requirement already satisfied: cloudpickle>=1.1.1 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from dask[delayed]->thewalrus>=0.18.0->strawberryfields) (2.1.0)\n",
      "Requirement already satisfied: packaging>=20.0 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from dask[delayed]->thewalrus>=0.18.0->strawberryfields) (21.3)\n",
      "Requirement already satisfied: fsspec>=0.6.0 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from dask[delayed]->thewalrus>=0.18.0->strawberryfields) (2022.7.1)\n",
      "Requirement already satisfied: partd>=0.3.10 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from dask[delayed]->thewalrus>=0.18.0->strawberryfields) (1.3.0)\n",
      "Requirement already satisfied: pyyaml>=5.3.1 in /opt/conda/lib/python3.9/site-packages (from dask[delayed]->thewalrus>=0.18.0->strawberryfields) (5.4.1)\n",
      "Requirement already satisfied: toolz>=0.8.2 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from dask[delayed]->thewalrus>=0.18.0->strawberryfields) (0.12.0)\n",
      "Requirement already satisfied: termcolor in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from fire->xanadu-cloud-client>=0.2.1->strawberryfields) (1.1.0)\n",
      "Requirement already satisfied: typing-extensions>=3.7.4.3 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from pydantic[dotenv]->xanadu-cloud-client>=0.2.1->strawberryfields) (4.3.0)\n",
      "Requirement already satisfied: python-dotenv>=0.10.4 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from pydantic[dotenv]->xanadu-cloud-client>=0.2.1->strawberryfields) (0.20.0)\n",
      "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from packaging>=20.0->dask[delayed]->thewalrus>=0.18.0->strawberryfields) (3.0.9)\n",
      "Requirement already satisfied: locket in /opt/.qbraid/environments/qbraid_000000/pyenv/lib/python3.9/site-packages (from partd>=0.3.10->dask[delayed]->thewalrus>=0.18.0->strawberryfields) (1.0.0)\n",
      "\n",
      "\u001b[1m[\u001b[0m\u001b[34;49mnotice\u001b[0m\u001b[1;39;49m]\u001b[0m\u001b[39;49m A new release of pip available: \u001b[0m\u001b[31;49m22.1.2\u001b[0m\u001b[39;49m -> \u001b[0m\u001b[32;49m22.2.2\u001b[0m\n",
      "\u001b[1m[\u001b[0m\u001b[34;49mnotice\u001b[0m\u001b[1;39;49m]\u001b[0m\u001b[39;49m To update, run: \u001b[0m\u001b[32;49mpython -m pip install --upgrade pip\u001b[0m\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install strawberryfields\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9ec97bd2-0d20-487b-9652-5292233b6c60",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2022-08-23 09:31:59.583896: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory\n",
      "2022-08-23 09:31:59.583929: I tensorflow/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "# set the random seed\n",
    "np.random.seed(42)\n",
    "\n",
    "# import Strawberry Fields\n",
    "import strawberryfields as sf\n",
    "from strawberryfields.ops import *\n",
    "\n",
    "# initialize a 4 mode program\n",
    "boson_sampling = sf.Program(4)\n",
    "\n",
    "with boson_sampling.context as q:\n",
    "    # prepare the input fock states\n",
    "    Fock(1) | q[0]\n",
    "    Fock(1) | q[1]\n",
    "    Vac     | q[2]\n",
    "    Fock(1) | q[3]\n",
    "\n",
    "    # rotation gates\n",
    "    #Rgate(0.5719)  | q[0]\n",
    "    #Rgate(-1.9782) | q[1]\n",
    "    #Rgate(2.0603)  | q[2]\n",
    "    #Rgate(0.0644)  | q[3]\n",
    "    # rotation gates\n",
    "    Rgate(0.0644)  | q[0]\n",
    "    Rgate(0.5719) | q[1]\n",
    "    Rgate(2.0603)  | q[2]\n",
    "    Rgate(-1.9782)  | q[3]\n",
    "\n",
    "\n",
    "    # beamsplitter array\n",
    "    #BSgate(0.7804, 0.8578)  | (q[0], q[1])\n",
    "    #BSgate(0.06406, 0.5165) | (q[2], q[3])\n",
    "    #BSgate(0.473, 0.1176)   | (q[1], q[2])\n",
    "    #BSgate(0.563, 0.1517)   | (q[0], q[1])\n",
    "    #BSgate(0.1323, 0.9946)  | (q[2], q[3])\n",
    "    #BSgate(0.311, 0.3231)   | (q[1], q[2])\n",
    "    #BSgate(0.4348, 0.0798)  | (q[0], q[1])\n",
    "    #BSgate(0.4368, 0.6157)  | (q[2], q[3])\n",
    "    # beamsplitter array\n",
    "    BSgate(0.7804, 0.8578)  | (q[0], q[1])\n",
    "    BSgate(0.06406, 0.5165) | (q[2], q[3])\n",
    "    BSgate(0.7804, 0.8578)   | (q[1], q[2])\n",
    "    BSgate(0.06406, 0.5165)   | (q[0], q[1])\n",
    "    BSgate(0.473, 0.1176)  | (q[2], q[3])\n",
    "    BSgate(0.563, 0.1517)   | (q[1], q[2])\n",
    "    BSgate(0.1323, 0.9946)  | (q[0], q[1])\n",
    "    BSgate(0.311, 0.3231)  | (q[2], q[3])\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "385efe59-0315-41c9-90a1-71b6f6962e69",
   "metadata": {},
   "outputs": [],
   "source": [
    "#MeasureFock() | q"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c2cf723e-1456-424e-8c6b-53d0f5175e49",
   "metadata": {},
   "outputs": [],
   "source": [
    "eng = sf.Engine(backend=\"fock\", backend_options={\"cutoff_dim\": 7})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d43edee8-51e1-45bc-9887-50d009afd203",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "87dda90f-b188-4652-ad25-4ff4e9bf3c93",
   "metadata": {},
   "outputs": [],
   "source": [
    "results = eng.run(boson_sampling)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "a61aca9a-f578-4959-8bc6-af3aeb0e7e7f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<Result: shots=0, num_modes=0, contains state=True>\n"
     ]
    }
   ],
   "source": [
    "print(results)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "0934057a-8e2b-4858-a78c-8d08b8efd7f2",
   "metadata": {},
   "outputs": [],
   "source": [
    "probs = results.state.all_fock_probs()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f95fc2e2-dde8-43ed-85cb-8b39a750d1ea",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.02701656565980743\n",
      "0.2280016292105849\n"
     ]
    }
   ],
   "source": [
    "print(probs[1, 1, 0, 1])\n",
    "print(probs[2, 0, 0, 1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "877ecbc4-5dab-4274-8807-1c891d2f33de",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from numpy.linalg import multi_dot\n",
    "from scipy.linalg import block_diag"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "91b14103-9dc4-46e0-9a25-5b65cf6576a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "Uphase = np.diag([np.exp(0.5719*1j),np.exp(-1.9782*1j),np.exp(2.0603*1j),np.exp(0.0644*1j)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "46b19325-47f7-40b6-9ad4-1383b37d49e9",
   "metadata": {},
   "outputs": [],
   "source": [
    "BSargs = [\n",
    "    (0.7804, 0.8578),\n",
    "    (0.06406, 0.5165),\n",
    "    (0.473, 0.1176),\n",
    "    (0.563, 0.1517),\n",
    "    (0.1323, 0.9946),\n",
    "    (0.311, 0.3231),\n",
    "    (0.4348, 0.0798),\n",
    "    (0.4368, 0.6157)\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "f1687ad2-262d-4fb0-af59-2d8c13ebc4a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "t_r_amplitudes = [(np.cos(q), np.exp(p*1j)*np.sin(q)) for q,p in BSargs]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "17d99dec-8a99-46da-b646-757cf3bf9d95",
   "metadata": {},
   "outputs": [],
   "source": [
    "BSunitaries = [np.array([[t, -np.conj(r)], [r, t]]) for t,r in t_r_amplitudes]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "42060cb7-49da-4cf1-89aa-afc391323705",
   "metadata": {},
   "outputs": [],
   "source": [
    "UBS1 = block_diag(*BSunitaries[0:2])\n",
    "UBS2 = block_diag([[1]], BSunitaries[2], [[1]])\n",
    "UBS3 = block_diag(*BSunitaries[3:5])\n",
    "UBS4 = block_diag([[1]], BSunitaries[5], [[1]])\n",
    "UBS5 = block_diag(*BSunitaries[6:8])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "9042310c-623d-4b6e-9516-bbf5f4e0112a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 0.2195-0.2565j  0.6111+0.5242j -0.1027+0.4745j -0.0273+0.0373j]\n",
      " [ 0.4513+0.6026j  0.457 +0.0123j  0.1316-0.4504j  0.0353-0.0532j]\n",
      " [ 0.0387+0.4927j -0.0192-0.3218j -0.2408+0.5244j -0.4584+0.3296j]\n",
      " [-0.1566+0.2246j  0.11  -0.1638j -0.4212+0.1836j  0.8188+0.068j ]]\n"
     ]
    }
   ],
   "source": [
    "U = multi_dot([UBS5, UBS4, UBS3, UBS2, UBS1, Uphase])\n",
    "print(np.round(U, 4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "e41f5453-25de-42a5-81c9-2f8041b0b9a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "prog_unitary = sf.Program(4)\n",
    "prog_unitary.circuit = boson_sampling.circuit[4:]\n",
    "prog_compiled = prog_unitary.compile(compiler=\"gaussian_unitary\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f580dd98-c647-4aa7-ac34-2759c1f8514c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bc5bcad0-1817-4cd7-b03f-7cfde93155ac",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1af3da36-92e8-4317-9d97-8d5965eb1cfa",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "6ffdcebe-9ee8-47e6-851b-0dfe9fe1851d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "GaussianTransform([[ 0.6372 -0.7173  0.1376  0.0383 -0.0572 -0.2229 -0.0776  0.0112]\n",
      " [ 0.343   0.1781 -0.1118 -0.206  -0.1989  0.0694  0.8458  0.1897]\n",
      " [ 0.0646  0.1974 -0.2586  0.3623 -0.5164 -0.4502  0.0224 -0.5375]\n",
      " [-0.109   0.0198 -0.3207 -0.2984 -0.3883 -0.3966 -0.2775  0.6409]\n",
      " [ 0.0572  0.2229  0.0776 -0.0112  0.6372 -0.7173  0.1376  0.0383]\n",
      " [ 0.1989 -0.0694 -0.8458 -0.1897  0.343   0.1781 -0.1118 -0.206 ]\n",
      " [ 0.5164  0.4502 -0.0224  0.5375  0.0646  0.1974 -0.2586  0.3623]\n",
      " [ 0.3883  0.3966  0.2775 -0.6409 -0.109   0.0198 -0.3207 -0.2984]]) | (q[0], q[1], q[2], q[3])\n"
     ]
    }
   ],
   "source": [
    "prog_compiled.print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "82fecd93-c621-4582-87ba-c81b83aa9731",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[ 0.6372+0.0572j -0.7173+0.2229j  0.1376+0.0776j  0.0383-0.0112j]\n",
      " [ 0.343 +0.1989j  0.1781-0.0694j -0.1118-0.8458j -0.206 -0.1897j]\n",
      " [ 0.0646+0.5164j  0.1974+0.4502j -0.2586-0.0224j  0.3623+0.5375j]\n",
      " [-0.109 +0.3883j  0.0198+0.3966j -0.3207+0.2775j -0.2984-0.6409j]]\n"
     ]
    }
   ],
   "source": [
    "S = prog_compiled.circuit[0].op.p[0]\n",
    "U = S[:4, :4] + 1j*S[4:, :4]\n",
    "print(U)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "c62372c4-318d-4184-a255-a3a65437a363",
   "metadata": {},
   "outputs": [],
   "source": [
    "boson_sampling = sf.Program(4)\n",
    "\n",
    "with boson_sampling.context as q:\n",
    "    # prepare the input fock states\n",
    "    Fock(1) | q[0]\n",
    "    Fock(1) | q[1]\n",
    "    Vac     | q[2]\n",
    "    Fock(1) | q[3]\n",
    "\n",
    "    Interferometer(U) | q"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "21bd07fb-3543-4891-b32c-b97c406af263",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Fock(1) | (q[0])\n",
      "Fock(1) | (q[1])\n",
      "Vac | (q[2])\n",
      "Fock(1) | (q[3])\n",
      "Rgate(0.3237) | (q[0])\n",
      "BSgate(0.7932, 0) | (q[0], q[1])\n",
      "Rgate(-2.344) | (q[2])\n",
      "BSgate(0.2473, 0) | (q[2], q[3])\n",
      "Rgate(2.724) | (q[1])\n",
      "BSgate(1.123, 0) | (q[1], q[2])\n",
      "Rgate(-3.129) | (q[0])\n",
      "BSgate(0.1817, 0) | (q[0], q[1])\n",
      "Rgate(2.858) | (q[0])\n",
      "Rgate(0.4223) | (q[1])\n",
      "Rgate(1.939) | (q[2])\n",
      "Rgate(4.34) | (q[3])\n",
      "BSgate(-0.6788, 0) | (q[2], q[3])\n",
      "Rgate(2.82) | (q[2])\n",
      "BSgate(-0.1073, 0) | (q[1], q[2])\n",
      "Rgate(-2.951) | (q[1])\n"
     ]
    }
   ],
   "source": [
    "boson_sampling.compile(compiler=\"fock\").print()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "072abeb6-efcf-4224-aaa0-5dd876270c74",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.2280016292105849\n"
     ]
    }
   ],
   "source": [
    "print(probs[2,0,0,1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "18706943-2933-4510-a602-445f7c07fdc7",
   "metadata": {},
   "outputs": [],
   "source": [
    "from thewalrus import perm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "4116417d-b425-49fe-a53c-796fde072db8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0.6372+0.0572j, -0.7173+0.2229j,  0.0383-0.0112j],\n",
       "       [ 0.343 +0.1989j,  0.1781-0.0694j, -0.206 -0.1897j],\n",
       "       [ 0.0646+0.5164j,  0.1974+0.4502j,  0.3623+0.5375j],\n",
       "       [-0.109 +0.3883j,  0.0198+0.3966j, -0.2984-0.6409j]])"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "U[:,[0,1,3]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "9e2e8cfd-1143-428c-863a-c2e33bfd3e13",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 0.6372+0.0572j, -0.7173+0.2229j,  0.0383-0.0112j],\n",
       "       [ 0.6372+0.0572j, -0.7173+0.2229j,  0.0383-0.0112j],\n",
       "       [-0.109 +0.3883j,  0.0198+0.3966j, -0.2984-0.6409j]])"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "U[:,[0,1,3]][[0,0,3]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "b15b16f7-094c-4004-9419-b4266171c0f7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.2280016292105848\n"
     ]
    }
   ],
   "source": [
    "print(np.abs(perm(U[:, [0,1,3]][[0,0,3]]))**2 / 2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "702fb780-b95d-4937-b155-7573f6298fa5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3.652023326990382e-14\n"
     ]
    }
   ],
   "source": [
    "BS = np.abs(perm(U[:, [0,1,3]][[0,0,3]]))**2 / 2\n",
    "SF = probs[2,0,0,1]\n",
    "\n",
    "print(100*np.abs(BS-SF)/BS)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "8d84b3ae-abc8-4c29-9d2c-6151899b5173",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.002202343953200861\n",
      "0.00220234395320086\n"
     ]
    }
   ],
   "source": [
    "print(probs[3,0,0,0])\n",
    "print(np.abs(perm(U[:, [0,1,3]][[0,0,0]]))**2 / 6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "f3ce174e-68af-48fc-a6fd-a6a26d28c063",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.02701656565980743\n",
      "0.02701656565980743\n"
     ]
    }
   ],
   "source": [
    "print(probs[1,1,0,1])\n",
    "print(np.abs(perm(U[:, [0,1,3]][[0,1,3]]))**2 / 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4fb914f5-b73e-49bb-bfc3-e64852af935e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 [Default]",
   "language": "python",
   "name": "python3_qbraid"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
